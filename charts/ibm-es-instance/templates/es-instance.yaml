apiVersion: eventstreams.ibm.com/{{ .Values.apiVersion}}
kind: EventStreams
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace}}
  labels:
    {{- include "ibm-es-instance.labels" . | nindent 4 }}
spec:
  version: {{ .Values.version}}
  license:
    # By installing this product you accept the license terms at https://ibm.biz/es-license
    accept: true
    use: {{ .Values.license_use }}
  adminApi: {}
  adminUI: {}
  apicurioRegistry: {}
  collector: {}
  restProducer: {}
  strimziOverrides:
    kafka:
      replicas: {{ .Values.kafka_replicas}}
      authorization:
        type: custom
        supportsAdminApi: true
        authorizerClass: com.ibm.eventstreams.runas.authorizer.RunAsAuthorizer
      config:
        inter.broker.protocol.version: {{ .Values.kafka_config.inter_broker_protocol_version}}
        log.cleaner.threads: 6
        log.message.format.version: {{ .Values.kafka_config.log_message_format_version}}
        num.io.threads: 24
        num.network.threads: 9
        num.replica.fetchers: 3
        offsets.topic.replication.factor: 3
        default.replication.factor: 3
        min.insync.replicas: 2
      {{- with .Values.listeners }}
      listeners:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      metricsConfig:
        type: jmxPrometheusExporter
        valueFrom:
          configMapKeyRef:
            key: kafka-metrics-config.yaml
            name: metrics-config
      {{- with .Values.resources }}
      resources:
        requests:
          cpu: {{.requests.cpu }}
          memory: {{.requests.memory }}
        limits:
          cpu: {{ .limits.cpu  }}
          memory: {{ .limits.memory }}
      {{- end }}
      {{- with .Values.storage_kafka }}
      storage:
        type: {{ .type }}
      {{- if ne .type "ephemeral"}}
        size: {{ .size }}
        class: {{ .class }}
      {{- end }}
      {{- end }}
    zookeeper:
      replicas: {{ .Values.zookeeper_replicas}}
      metricsConfig:
        type: jmxPrometheusExporter
        valueFrom:
          configMapKeyRef:
            key: zookeeper-metrics-config.yaml
            name: metrics-config
      {{- with .Values.storage_zookeeper }}
      storage:
        type: {{ .type }}
      {{- if ne .type "ephemeral"}}
        size: {{ .size }}
        class: {{ .class }}
      {{- end }}
      {{- end }}
  requestIbmServices:
    iam: {{ .Values.requestIbmServices_iam}}
    monitoring: {{ .Values.requestIbmServices_monitoring}}
